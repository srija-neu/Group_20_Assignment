/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package info5100.university.example.Ui.AdminRole;

import info5100.university.example.Persona.Person;
import info5100.university.example.Persona.PersonDirectory;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Srija
 */
public class ManageRegistrarJPanel extends javax.swing.JPanel {

    private PersonDirectory personDirectory;
    private JPanel CardSequencePanel;
    private Person selectedRegistrar;
    /**
     * Creates new form ManageRegistrarJPanel
     */
    public ManageRegistrarJPanel(PersonDirectory pDir, JPanel cardSequencePanel) {
        initComponents();
        this.personDirectory = pDir;
        this.CardSequencePanel = cardSequencePanel;
        
        

        populateRegistrarTable();
    }
    
    private void populateRegistrarTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblRegistrar.getModel();
    dtm.setRowCount(0);
    for (Person p : personDirectory.getPersonList()) {
        if (p != null && "Registrar".equalsIgnoreCase(p.getRole())) {
            dtm.addRow(new Object[]{
                p.getUniversityId(),   // col 0 - ID
                p.getName(),           // col 1 - Registrar name
                p.getDepartment(),     // col 2 - Department
                p.getEmail(),          // col 3 - Email
                p.getPhone()           // col 4 - Contact Info
            });
        }
    }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JScrollPane = new javax.swing.JScrollPane();
        tblRegistrar = new javax.swing.JTable();
        txtDepartment = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblContactInfo = new javax.swing.JLabel();
        txtContactInfo = new javax.swing.JTextField();
        lblDepartment = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        tblRegistrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Registrar ID", "Registrar name", "Department", "Email", "Contact Info"
            }
        ));
        JScrollPane.setViewportView(tblRegistrar);

        txtDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartmentActionPerformed(evt);
            }
        });

        lblContactInfo.setText("Contact info");

        lblDepartment.setText("Department");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblEmail.setText("Email");

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnBack)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDepartment)
                    .addComponent(lblEmail))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(lblContactInfo)
                        .addGap(18, 18, 18)
                        .addComponent(txtContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(JScrollPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDepartment)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblContactInfo)
                            .addComponent(txtContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail)
                    .addComponent(btnDelete)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepartmentActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int row = tblRegistrar.getSelectedRow();
    if (row < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Select a row first.");
        return;
    }

    // Read current values from the table (expects 5 columns)
    String uid       = String.valueOf(tblRegistrar.getValueAt(row, 0));
    String tableDept = String.valueOf(tblRegistrar.getValueAt(row, 2));
    String tableMail = String.valueOf(tblRegistrar.getValueAt(row, 3));
    String tablePh   = String.valueOf(tblRegistrar.getValueAt(row, 4));

    // If the edit fields are blank, LOAD the selected row into the fields first
    boolean needLoad =
            txtDepartment.getText().trim().isEmpty()
         && txtEmail.getText().trim().isEmpty()
         && txtContactInfo.getText().trim().isEmpty();

    if (needLoad) {
        txtDepartment.setText(tableDept);
        txtEmail.setText(tableMail);
        txtContactInfo.setText(tablePh);
        return; // first click only loads fields
    }

    // Otherwise SAVE the edits back into the model
    Person p = personDirectory.findByUniversityId(uid);
    if (p == null) {
        javax.swing.JOptionPane.showMessageDialog(this, "Could not find registrar by ID: " + uid);
        return;
    }

    p.setDepartment(txtDepartment.getText().trim());
    p.setEmail(txtEmail.getText().trim());
    p.setPhone(txtContactInfo.getText().trim());

    populateRegistrarTable();
    javax.swing.JOptionPane.showMessageDialog(this, "Registrar updated.");

    // Optional: clear edit fields after saving
    txtDepartment.setText("");
    txtEmail.setText("");
    txtContactInfo.setText("");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tblRegistrar.getSelectedRow();
    if (row < 0) return;
    String uid = String.valueOf(tblRegistrar.getValueAt(row, 0));
    Person p = personDirectory.findByUniversityId(uid);
    if (p == null) return;

    personDirectory.deletePerson(p);
    populateRegistrarTable();

    // Optional: clear fields
    txtDepartment.setText("");
    txtEmail.setText("");
    txtContactInfo.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblContactInfo;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JTable tblRegistrar;
    private javax.swing.JTextField txtContactInfo;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables
}
