/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package info5100.university.example.Ui.AdminRole;

import info5100.university.example.Persona.Person;
import info5100.university.example.Persona.PersonDirectory;
import info5100.university.example.Persona.StudentDirectory;
import info5100.university.example.Persona.Faculty.FacultyDirectory;

import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
/**
 *
 * @author Srija
 */
public class RegisterPersonsJPanel extends javax.swing.JPanel {
    private PersonDirectory personDirectory;
    private StudentDirectory studentDirectory;
    private FacultyDirectory facultyDirectory;
    private javax.swing.JPanel CardSequencePanel;
    

    /**
     * Creates new form RegisterPersonsJPanel
     */
    public RegisterPersonsJPanel(PersonDirectory pDir,
                                StudentDirectory sDir,
                                FacultyDirectory fDir,
                             javax.swing.JPanel cardSequencePanel) {
        initComponents();
        this.personDirectory = pDir;
        this.studentDirectory = sDir;
        this.facultyDirectory = fDir;
        this.CardSequencePanel = cardSequencePanel;
        
        cmbRole.removeAllItems();
        cmbRole.addItem("Admin");
        cmbRole.addItem("Faculty");
        cmbRole.addItem("Student");
        cmbRole.addItem("Registrar");
        

    }
    
    private String norm(String s){ return s==null ? "" : s.trim().toLowerCase(); }
    private boolean emailExists(String email){
        if (email==null || email.isBlank()) return false;
        for (Person p: personDirectory.getPersonList()){
            if (p.getEmail()!=null && norm(p.getEmail()).equals(norm(email))) return true;
        }
        return false;
    }
    private boolean universityIdExists(String uid){
        if (uid==null || uid.isBlank()) return false;
        for (Person p: personDirectory.getPersonList()){
            if (p.getUniversityId()!=null && norm(p.getUniversityId()).equals(norm(uid))) return true;
        }
        return false;
    }
    
    /*private boolean isDuplicate(String email, String uid) {
        ArrayList<Person> list = personDirectory.getPersonList();
        for (Person p : list) {
            if (email != null && email.length() > 0 &&
                p.getEmail() != null && p.getEmail().equalsIgnoreCase(email)) return true;
            if (uid != null && uid.length() > 0 &&
                p.getUniversityId() != null && p.getUniversityId().equalsIgnoreCase(uid)) return true;
        }
        return false;
    }*/
    
    private String generateId() {
        String prefix = "NU";
        int counter = 1000 + personDirectory.getPersonList().size() + 1;
        String id = prefix + counter;
        while (universityIdExists(id)) { counter++; id = prefix + counter; }
        return id;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        cmbRole = new javax.swing.JComboBox<>();
        lblContactNo = new javax.swing.JLabel();
        lblDepartment = new javax.swing.JLabel();
        txtContactNo = new javax.swing.JTextField();
        txtDepartment = new javax.swing.JTextField();
        btnAutoGen = new javax.swing.JButton();
        lbluniversityID = new javax.swing.JLabel();
        txtUniversituID = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        lblName.setText("Name");

        lblRole.setText("Role");

        lblEmail.setText("Email");

        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblContactNo.setText("Contact No.");

        lblDepartment.setText("Department");

        btnAutoGen.setText("Auto-Generate ID");
        btnAutoGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoGenActionPerformed(evt);
            }
        });

        lbluniversityID.setText("UniveristyID");

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnBack)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblRole)
                                .addComponent(lblName)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblEmail)
                                    .addGap(2, 2, 2))
                                .addComponent(lblDepartment))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(lbluniversityID)))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblContactNo)
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnRegister)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContactNo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUniversituID, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(btnAutoGen)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDepartment))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContactNo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbluniversityID)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtUniversituID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAutoGen)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(btnRegister)
                        .addGap(14, 14, 14))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAutoGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoGenActionPerformed
        // TODO add your handling code here:
        txtUniversituID.setText(generateId());
    }//GEN-LAST:event_btnAutoGenActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        String uid  = txtUniversituID.getText().trim();
    String name = txtName.getText().trim();
    String email= txtEmail.getText().trim();
    String contact = txtContactNo.getText().trim();
    String dept = txtDepartment.getText().trim();
    String role = (String) cmbRole.getSelectedItem();

    if (name.isEmpty() || email.isEmpty() || role == null){
        JOptionPane.showMessageDialog(this, "Name, Email and Role are required.");
        return;
    }
    if (uid.isEmpty()) uid = generateId();

    // strong validation BEFORE adding anywhere
    if (emailExists(email)){
        JOptionPane.showMessageDialog(this, "Email already exists. Person NOT registered.");
        return;
    }
    if (universityIdExists(uid)){
        JOptionPane.showMessageDialog(this, "University ID already exists. Person NOT registered.");
        return;
    }

    // create the Person
    Person p = new Person();
    p.setUniversityId(uid);
    p.setName(name);
    p.setEmail(email);
    p.setPhone(contact);
    p.setDepartment(dept);
    p.setRole(role);

    // add to PersonDirectory
    personDirectory.addPerson(p, role);

    // ALSO create the proper profile so tables populate:
    if ("Student".equalsIgnoreCase(role) && studentDirectory != null) {
        studentDirectory.newStudentProfile(p);
    } else if ("Faculty".equalsIgnoreCase(role) && facultyDirectory != null) {
        facultyDirectory.newFacultyProfile(p);
    }
    // Registrar/Admin do not need separate profiles

    JOptionPane.showMessageDialog(this, "Person registered with ID: " + uid);

    // clear fields after success
    txtUniversituID.setText("");
    txtName.setText("");
    txtEmail.setText("");
    txtContactNo.setText("");
    txtDepartment.setText("");
    if (cmbRole.getItemCount() > 0) cmbRole.setSelectedIndex(0);
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutoGen;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JLabel lblContactNo;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lbluniversityID;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUniversituID;
    // End of variables declaration//GEN-END:variables
}
